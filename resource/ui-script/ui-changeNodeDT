#!/bin/bash
address=$(jq -r --argjson domainNUM $1 '.v2node | to_entries[] | select(.key == $domainNUM) | .value.domain' /opt/de_GWD/0conf)
path=$(jq -r --argjson domainNUM $1 '.v2node | to_entries[] | select(.key == $domainNUM) | .value.path' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson domainNUM $1 '.v2node | to_entries[] | select(.key == $domainNUM) | .value.uuid' /opt/de_GWD/0conf)

domain=$(echo -e $address | cut -d: -f1)
port=$(echo -e $address | cut -d: -f2 | grep '^[[:digit:]]*$')
[ -z $port ] && port="443"

jq --arg domain $domain '.v2nodeDIV.nodeDT.domain=$domain' /opt/de_GWD/0conf |\
jq --arg port $port '.v2nodeDIV.nodeDT.port=$port' |\
jq --arg path $path '.v2nodeDIV.nodeDT.path=$path' |\
jq --arg uuid $uuid '.v2nodeDIV.nodeDT.uuid=$uuid' | sponge /opt/de_GWD/0conf
chmod 666 /opt/de_GWD/0conf

cat << EOF >/tmp/OBdt
{
      "tag": "divertTraffic",
      "protocol": "vless",
      "settings": {
        "vnext": [
          {
            "address": "$domain",
            "port": $port,
            "users": [
              {
                "id": "$uuid",
                "encryption": "none",
                "level": 1
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "$path"
        },
        "security": "tls",
        "tlsSettings": {
          "serverName": "$domain",
          "allowInsecure": false
        },
        "sockopt": {
          "mark": 255,
          "domainStrategy": "UseIPv4"
        }
      }
}
EOF

jq 'del(.outbounds[] | select(.tag == "divertTraffic"))' /opt/de_GWD/vtrui/config.json |\
jq --slurpfile OBdt /tmp/OBdt '.outbounds+=$OBdt' | sponge /opt/de_GWD/vtrui/config.json
chmod 666 /opt/de_GWD/vtrui/config.json

systemctl restart vtrui

rm -rf /tmp/OBdt
